<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zizai.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="zizai.model.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="chinese" property="chinese" jdbcType="VARCHAR" />
    <result column="math" property="math" jdbcType="VARCHAR" />
    <result column="english" property="english" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, age, sex, chinese, math, english
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}

  </select>
  <select id="getAllStu" resultMap="BaseResultMap">
   select 
   <include refid="Base_Column_List"/>
    from student 
   </select>

   <select id="selectStudentByID" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   select 
   <include refid="Base_Column_List"/>
    from student 
    where id = #{id,jdbcType=INTEGER}

   </select>
    <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from student
    where name = #{name,jdbcType=VARCHAR}
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zizai.model.Student" >
    insert into student (id, name, age, 
      sex,chinese,math,english)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR},#{chinese,jdbcType=VARCHAR},#{math,jdbcType=VARCHAR},#{english,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" parameterType="zizai.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="chinese != null" >
        chinese,
      </if>
      <if test="math != null" >
        math,
      </if>
      <if test="english != null" >
        english,
      </if>
    </trim>

    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="chinese != null" >
        #{chinese,jdbcType=VARCHAR},
      </if>
      <if test="math != null" >
        #{math,jdbcType=CARCHAR},
      </if>
      <if test="english != null" >
        #{english,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="zizai.model.Student" >
    update student
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="chinese != null" >
        chinese = #{chinese,jdbcType=VARCHAR},
      </if>
      <if test="math != null" >
        math = #{math,jdbcType=VARCHAR},
      </if>
      <if test="english != null" >
        english = #{english,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateStu" parameterType="zizai.model.Student" >
    update student
    set name = #{name,jdbcType=VARCHAR},
         age = #{age,jdbcType=VARCHAR},
         sex = #{sex,jdbcType=VARCHAR},
         chinese = #{chinese,jdbcType=VARCHAR},
         math = #{math,jdbcType=VARCHAR},
         english = #{english,jdbcType=VARCHAR}

    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>